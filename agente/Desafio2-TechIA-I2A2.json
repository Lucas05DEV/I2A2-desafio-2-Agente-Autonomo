{
  "name": "TechIA - Desafio 2",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -540,
        -40
      ],
      "id": "9c05b74e-648a-4b8c-8800-5b77ba5beb23",
      "name": "When chat message received",
      "webhookId": "a55a38f8-14e6-43a4-be84-3f402479262c"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1TPreLVK719FcJTrAM7cWfCYhle8ORuf7",
          "mode": "list",
          "cachedResultName": "202401_NFs_Itens.csv",
          "cachedResultUrl": "https://drive.google.com/file/d/1TPreLVK719FcJTrAM7cWfCYhle8ORuf7/view?usp=drivesdk"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -140,
        -160
      ],
      "id": "b21a52bf-73a8-49a1-9c84-368285f05d28",
      "name": "NFs_Itens",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "GXjZvyCNcxeYadpe",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1mNHrQklGjXCtwTgzTUVImpUTEnKCGps6",
          "mode": "list",
          "cachedResultName": "202401_NFs_Cabecalho.csv",
          "cachedResultUrl": "https://drive.google.com/file/d/1mNHrQklGjXCtwTgzTUVImpUTEnKCGps6/view?usp=drivesdk"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -140,
        100
      ],
      "id": "97e9e3cd-ca36-4f90-b55a-1e25c2180084",
      "name": "NFs_Cabecalho",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "GXjZvyCNcxeYadpe",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        60,
        -160
      ],
      "id": "00c5c4cd-f215-4725-b048-d51e555ca0cf",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        60,
        100
      ],
      "id": "2150eef8-400d-4f14-9d7d-eaa5a134c456",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "operation": "update",
        "table": {
          "__rl": true,
          "value": "notas_fiscais",
          "mode": "list",
          "cachedResultName": "notas_fiscais"
        },
        "dataMode": "defineBelow",
        "columnToMatchOn": "chave_acesso",
        "valueToMatchOn": "={{ $json['CHAVE DE ACESSO'] }}",
        "valuesToSend": {
          "values": [
            {
              "column": "modelo",
              "value": "={{ $json.MODELO }}"
            },
            {
              "column": "serie",
              "value": "={{ $json['S√âRIE'] }}"
            },
            {
              "column": "numero",
              "value": "={{ $json['N√öMERO'] }}"
            },
            {
              "column": "natureza_operacao",
              "value": "={{ $json['NATUREZA DA OPERA√á√ÉO'] }}"
            },
            {
              "column": "natureza_operacao",
              "value": "={{ $json['NATUREZA DA OPERA√á√ÉO'] }}"
            },
            {
              "column": "data_emissao",
              "value": "={{ $json['DATA EMISS√ÉO'] }}"
            },
            {
              "column": "cpf_cnpj_emitente",
              "value": "={{ $json['CPF/CNPJ Emitente'] }}"
            },
            {
              "column": "razao_social_emitente",
              "value": "={{ $json['RAZ√ÉO SOCIAL EMITENTE'] }}"
            },
            {
              "column": "inscricao_estadual_emitente",
              "value": "={{ $json['INSCRI√á√ÉO ESTADUAL EMITENTE'] }}"
            },
            {
              "column": "uf_emitente",
              "value": "={{ $json['UF EMITENTE'] }}"
            },
            {
              "column": "municipio_emitente",
              "value": "={{ $json['MUNIC√çPIO EMITENTE'] }}"
            },
            {
              "column": "cnpj_destinatario",
              "value": "={{ $json['CNPJ DESTINAT√ÅRIO'] }}"
            },
            {
              "column": "nome_destinatario",
              "value": "={{ $json['NOME DESTINAT√ÅRIO'] }}"
            },
            {
              "column": "uf_destinatario",
              "value": "={{ $json['UF DESTINAT√ÅRIO'] }}"
            },
            {
              "column": "indicador_ie_destinatario",
              "value": "={{ $json['INDICADOR IE DESTINAT√ÅRIO'] }}"
            },
            {
              "column": "destino_operacao",
              "value": "={{ $json['DESTINO DA OPERA√á√ÉO'] }}"
            },
            {
              "column": "consumidor_final",
              "value": "={{ $json['CONSUMIDOR FINAL'] }}"
            },
            {
              "column": "presenca_comprador",
              "value": "={{ $json['PRESEN√áA DO COMPRADOR'] }}"
            },
            {
              "column": "numero_produto",
              "value": "={{ $json['N√öMERO PRODUTO'] }}"
            },
            {
              "column": "descricao_produto_servico",
              "value": "={{ $json['DESCRI√á√ÉO DO PRODUTO/SERVI√áO'] }}"
            },
            {
              "column": "codigo_ncm",
              "value": "={{ $json['C√ìDIGO NCM/SH'] }}"
            },
            {
              "column": "tipo_produto",
              "value": "={{ $json['NCM/SH (TIPO DE PRODUTO)'] }}"
            },
            {
              "column": "cfop",
              "value": "={{ $json.CFOP }}"
            },
            {
              "column": "quantidade",
              "value": "={{ $json.QUANTIDADE }}"
            },
            {
              "column": "unidade",
              "value": "={{ $json.UNIDADE }}"
            },
            {
              "column": "valor_unitario",
              "value": "={{ $json['VALOR UNIT√ÅRIO'] }}"
            },
            {
              "column": "valor_total",
              "value": "={{ $json['VALOR TOTAL'] }}"
            },
            {
              "column": "evento_mais_recente",
              "value": "={{ $json['EVENTO MAIS RECENTE'] }}"
            },
            {
              "column": "data_evento_mais_recente",
              "value": "={{ $json['DATA/HORA EVENTO MAIS RECENTE'] }}"
            },
            {
              "column": "valor_nota_fiscal",
              "value": "={{ $json['VALOR NOTA FISCAL'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        540,
        -20
      ],
      "id": "8abbe3f6-4fce-4912-8a9d-1c142b088600",
      "name": "MySQL1",
      "credentials": {
        "mySql": {
          "id": "KphgeQEWPyTLA9xZ",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "{{ $json.text }}",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        1040,
        220
      ],
      "id": "62b9dc49-98d8-492e-a9f4-e45cc0d302dd",
      "name": "MySQL Query1",
      "credentials": {
        "mySql": {
          "id": "KphgeQEWPyTLA9xZ",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        800,
        -260
      ],
      "id": "2d49ffb0-00d9-46df-939f-52dd13cac648",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const data = item.json;\n\n  return {\n    json: {\n      ...data,\n      \"QUANTIDADE\": Number(data[\"QUANTIDADE\"]),\n      \"VALOR UNIT√ÅRIO\": Number(data[\"VALOR UNIT√ÅRIO\"]),\n      \"VALOR TOTAL\": Number(data[\"VALOR TOTAL\"]),\n      \"VALOR NOTA FISCAL\": Number(data[\"VALOR NOTA FISCAL\"])\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        540,
        -260
      ],
      "id": "e1a44f06-0c56-4434-8cf0-1b74a37f4ed5",
      "name": "Pegando valor como Numeros1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an SQL assistant for MySQL.\n\nYour task is to convert questions written in Portuguese into valid and efficient SQL queries for a single table named `notas_fiscais`.\n\nThis table contains the following columns:\n\nchave_acesso, modelo, serie, numero, natureza_operacao, data_emissao, cpf_cnpj_emitente, razao_social_emitente, inscricao_estadual_emitente, uf_emitente, municipio_emitente, cnpj_destinatario, nome_destinatario, uf_destinatario, indicador_ie_destinatario, destino_operacao, consumidor_final, presenca_comprador, numero_produto, descricao_produto_servico, codigo_ncm, tipo_produto, cfop, quantidade, unidade, valor_unitario, valor_total, evento_mais_recente, data_evento_mais_recente, valor_nota_fiscal\n\nüß† Semantic mapping:\n- \"nota fiscal\", \"nota\", \"NF\" ‚Üí refers to unique invoices identified by `chave_acesso`\n- \"valor da nota\", \"valor total da nota fiscal\" ‚Üí refers to `valor_nota_fiscal`\n- \"produto\" ‚Üí refers to `descricao_produto_servico`\n- \"quem vendeu mais\" ‚Üí analyze `razao_social_emitente` with `SUM(valor_nota_fiscal)`\n\nüîÅ Important logic:\n- When counting invoices (\"notas fiscais\"), always use: COUNT(DISTINCT chave_acesso)\n- Every SQL statement **must start with SELECT** ‚Äî never omit it.\n- Only return one single SQL query per answer.\n\n‚ö†Ô∏è Strict instructions:\n- All data is in a **single table**. Do not use JOINs.\n- Use **only the columns listed above**. Do not invent or assume columns.\n- Do not include SQL comments (e.g. `-- ...`).\n- Do not use Markdown formatting (e.g. triple backticks).\n- Respond with **only the SQL query**, clean and ready to execute ‚Äî no explanations.\n\nUser question (in Portuguese):  \n{{ $json.chatInput }}\n",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        680,
        220
      ],
      "id": "a5291db2-c2f6-4bd9-8e7c-7b2c5f59c943",
      "name": "Gera o SQL Query"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Voc√™ √© um assistente especializado em comunica√ß√£o clara e natural com usu√°rios de sistemas de an√°lise de dados.\n\nSua tarefa √© gerar uma resposta textual objetiva e amig√°vel com base em:\n\n1. A pergunta feita pelo usu√°rio\n2. O resultado exato da consulta, que pode conter n√∫meros, nomes ou ambos\n\n---\n\nPergunta do usu√°rio: {{ $('When chat message received').item.json.chatInput }}\n\nResultado da consulta (formato JSON): {{ JSON.stringify($json) }}\n\n---\n\nüîí Regras obrigat√≥rias para gerar a resposta:\n\n- Responda diretamente √† pergunta com base **somente** nos dados fornecidos.\n- **Nunca invente informa√ß√µes** ou fa√ßa suposi√ß√µes.\n- Se o resultado tiver m√∫ltiplos campos (ex: nome da empresa e valor), use ambos corretamente na resposta.\n- Sempre formate os n√∫meros corretamente:\n\n  - Para valores monet√°rios, use `\"R$\"` com **duas casas decimais** e separador de milhar  \n    Ex: `R$ 18.952.517,61`\n\n  - Para contagens inteiras, use separador de milhar  \n    Ex: `Foram emitidas 1.250 notas fiscais`\n\n- Se o valor for zero, diga isso claramente  \n  Ex: `\"Nenhuma nota foi registrada nesse per√≠odo.\"`\n\n- Se o resultado tiver um nome (ex: de empresa ou produto), inclua ele naturalmente na resposta, sem aspas\n\n---\n\nüéØ Exemplos:\n\n- Pergunta: \"Qual empresa mais vendeu?\"  \n  Resultado:  \n  `{ \"razao_social_emitente\": \"EDITORA FTD S.A.\", \"total_vendas\": 12294992.01 }`  \n  Resposta: A empresa que mais vendeu foi EDITORA FTD S.A., com um total de R$ 12.294.992,01 em vendas.\n\n- Pergunta: \"Qual o valor total das notas emitidas?\"  \n  Resultado: `153200.75`  \n  Resposta: O valor total das notas emitidas foi de R$ 153.200,75.\n\n- Pergunta: \"Quantas notas foram emitidas?\"  \n  Resultado: `0`  \n  Resposta: Nenhuma nota fiscal foi emitida no per√≠odo analisado.\n\n- Pergunta: \"Qual o n√∫mero da nota com maior valor?\"  \n  Resultado: `982145`  \n  Resposta: A nota fiscal com o maior valor tem o n√∫mero 982145.\n\n---\n\n‚ú≥Ô∏è Sua resposta final deve ser apenas o texto, com clareza, precis√£o e formata√ß√£o correta.  \nN√£o use prefixos, markdown ou explica√ß√µes adicionais.\n",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1340,
        220
      ],
      "id": "5460dc6c-f505-4eac-b5e9-a093bae6ba5e",
      "name": "Gera a reposta do Chat"
    },
    {
      "parameters": {
        "mode": "combine",
        "fieldsToMatchString": "['CHAVE DE ACESSO']",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        320,
        -20
      ],
      "id": "ef0746d5-8b49-4042-8920-e56515391f34",
      "name": "Merge",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        680,
        440
      ],
      "id": "3f416c8a-731d-47de-b4d9-41f7b8ff0726",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "0lLQ774ycY1FVsnO",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1440,
        440
      ],
      "id": "e9e77548-07c8-4b90-a8b7-5829b11c7034",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "0lLQ774ycY1FVsnO",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "NFs_Itens",
            "type": "main",
            "index": 0
          },
          {
            "node": "NFs_Cabecalho",
            "type": "main",
            "index": 0
          },
          {
            "node": "Gera o SQL Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NFs_Itens": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NFs_Cabecalho": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MySQL Query1": {
      "main": [
        [
          {
            "node": "Gera a reposta do Chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pegando valor como Numeros1": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gera o SQL Query": {
      "main": [
        [
          {
            "node": "MySQL Query1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "MySQL1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Pegando valor como Numeros1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Gera o SQL Query",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Gera a reposta do Chat",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "MySQL1": {
      "main": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b9b9a961-a332-4154-94a3-7e262f56b224",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "13122d2a19c8e3cb77b69aeffaf3f7181e7351adddcba11cc409c8651d944ffd"
  },
  "id": "iuGa02k52P4W7i1J",
  "tags": []
}